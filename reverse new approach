lass Solution {
public:
    ListNode* reverse(ListNode* head, int k)
    {
        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* next;
        int count = 0;

        while(curr!=NULL && count<k)
        {
            curr = curr->next;
            count++;
        }

        if(count<k)
        {
            return head;
        }

         count = 0;
         curr = head;
         while(curr!=NULL && count<k)
         {
             next = curr->next;
             curr->next = prev;
             prev = curr;
             curr = next;
             count++;
         }

         if(next!=NULL)
         {
             head->next = reverse(next , k);
         }

         return prev;
    }
    ListNode* reverseKGroup(ListNode* head, int k) {
    return reverse(head , k);   
    }
};
