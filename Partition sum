 int solve(vector<int>& arr,int n, int tar)
    {
        vector<vector<int>> dp(n,vector<int>(tar+1 , 0));
         if(arr[0]==0) dp[0][0]=2;
          else dp[0][0] = 1;
          
          if(arr[0]!=0 && arr[0]<=tar) dp[0][arr[0]]=1;
          
        for(int i=1 ; i<n ;i++)
        {
            for(int j=0 ; j<=tar ; j++)
            {
                int notpick = dp[i-1][j];
                int pick = 0;
                if(arr[i]<=j) pick=dp[i-1][j-arr[i]];
                
                dp[i][j] = (notpick+pick)%mod;
            }
        }
        return dp[n-1][tar]%mod;
    }
  
    int countPartitions(int n, int d, vector<int>& arr) {
     int totsum = 0;
     for(int i=0 ; i<n ; i++) totsum+=arr[i];
     
     if(totsum-d <0 || (totsum-d)%2!=0) return 0;
     
     return solve(arr , n , (totsum-d)/2);
    }
};
