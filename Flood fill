class Solution {
public:
   void dfs(vector<vector<int>>& image, int sr, int sc, int color, vector<vector<int>> &ans, int delrow[] ,int delcol[] , int ini)
   {
       int n = image.size();
       int m = image[0].size();
       ans[sr][sc] = color;

       for(int i=0 ; i<4 ; i++)
       {
           int nrow = sr+delrow[i];
           int ncol = sc+delcol[i];
           if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && image[nrow][ncol]==ini && ans[nrow][ncol]!= color)
           {
               dfs(image,nrow,ncol,color,ans,delrow,delcol,ini);
           }
       }
   }

    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int ini = image[sr][sc];
        int delrow[] = {-1,0,1,0};
        int delcol[] = {0,1,0,-1};
        vector<vector<int>> ans = image;
        dfs(image , sr, sc , color , ans , delrow, delcol , ini);
        return ans;
    }
};
